(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{171:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"metrics-definition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#metrics-definition","aria-hidden":"true"}},[t._v("#")]),t._v(" Metrics Definition")]),t._v(" "),a("h2",{attrs:{id:"prometheus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prometheus","aria-hidden":"true"}},[t._v("#")]),t._v(" Prometheus")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("# Metrics definition\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[metrics]")]),t._v("\n  #...\n\n  # To enable Traefik to export internal metrics to Prometheus\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [metrics.prometheus]")]),t._v('\n\n    # Name of the related entry point\n    #\n    # Optional\n    # Default: "traefik"\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    entryPoint")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "traefik"')]),t._v("\n\n    # Buckets for latency metrics\n    #\n    # Optional\n    # Default: [0.1, 0.3, 1.2, 5]\n    #\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    buckets")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" [0.1,0.3,1.2,5.0]")]),t._v("\n\n  # ...\n")])])]),a("h2",{attrs:{id:"datadog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datadog","aria-hidden":"true"}},[t._v("#")]),t._v(" DataDog")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("# Metrics definition\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[metrics]")]),t._v("\n  #...\n\n  # DataDog metrics exporter type\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [metrics.datadog]")]),t._v('\n\n    # DataDog\'s address.\n    #\n    # Required\n    # Default: "localhost:8125"\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    address")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "localhost:8125"')]),t._v('\n\n    # DataDog push interval\n    #\n    # Optional\n    # Default: "10s"\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    pushInterval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "10s"')]),t._v("\n\n  # ...\n")])])]),a("h2",{attrs:{id:"statsd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statsd","aria-hidden":"true"}},[t._v("#")]),t._v(" StatsD")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[t._v("# Metrics definition\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[metrics]")]),t._v("\n  #...\n\n  # StatsD metrics exporter type\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [metrics.statsd]")]),t._v('\n\n    # StatD\'s address.\n    #\n    # Required\n    # Default: "localhost:8125"\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    address")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "localhost:8125"')]),t._v('\n\n    # StatD push interval\n    #\n    # Optional\n    # Default: "10s"\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    pushInterval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "10s"')]),t._v("\n\n  # ...\n")])])]),a("h2",{attrs:{id:"influxdb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#influxdb","aria-hidden":"true"}},[t._v("#")]),t._v(" InfluxDB")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[metrics]")]),t._v("\n  # ...\n\n  # InfluxDB metrics exporter type\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("  [metrics.influxdb]")]),t._v('\n\n    # InfluxDB\'s address.\n    #\n    # Required\n    # Default: "localhost:8089"\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    address")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "localhost:8089"')]),t._v('\n\n    # InfluxDB\'s address protocol (udp or http)\n    #\n    # Required\n    # Default: "udp"\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    protocol")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "udp"')]),t._v('\n\n    # InfluxDB\'s username\n    #\n    # Optional\n    # Default: "" (no username)\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    username")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' ""')]),t._v('\n\n    # InfluxDB\'s password\n    #\n    # Optional\n    # Default: "" (no password)\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    password")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' ""')]),t._v('\n\n    # InfluxDB push interval\n    #\n    # Optional\n    # Default: "10s"\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    pushinterval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' "10s"')]),t._v('\n\n    # InfluxDB database used when protocol is http\n    #\n    # Optional\n    # Default: ""\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    database")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' ""')]),t._v('\n\n    # InfluxDB retention policy used when protocol is http\n    #\n    # Optional\n    # Default: ""\n    #\n'),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("    retentionpolicy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(' ""')]),t._v("\n\n  # ...\n")])])])])}],!1,null,null,null);n.default=e.exports}}]);